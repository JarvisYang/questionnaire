@base: 108;

.iconfont(){
    font-family: iconfont;
}

.clearfix() {
    &:before,
    &:after{
        display: table;
        content: "";
        line-height: 0;
    }
    &:after{
        clear: both;
    }
}

.yh-card() {
    .width(1042);
    margin: 0 auto;
    border: 1px solid #eaeaea;
    .border-radius(12);
    background-color: #fff;
}

.yh-price(@a: 72, @b: 39, @c: 39, @color1: @yellow, @color2: @grey-2) {
    .font-size(@a);
    color: @color1;
    &:before{
        content: '￥';
        .font-size(@b);
        color: @color1;
        .margin-right(0);
    }
    &:after{
        content: '/ 天';
        .font-size(@c);
        color: @color2;
        .margin-left(16);
    }
}

.width(@a) {
    width: unit(@a/2, px);
    width: unit(@a/@base, rem);
}

.height(@a) {
    height: unit(@a/2, px);
    height: unit(@a/@base, rem);
}

.left(@a) {
    left: unit(@a/2, px);
    left: unit(@a/@base, rem);
}

.right(@a) {
    right: unit(@a/2, px);
    right: unit(@a/@base, rem);
}

.top(@a) {
    top: unit(@a/2, px);
    top: unit(@a/@base, rem);
}

.bottom(@a) {
    bottom: unit(@a/2, px);
    bottom: unit(@a/@base, rem);
}

.max-height(@a) {
    max-height: unit(@a/2, px);
    max-height: unit(@a/@base, rem);
}

.min-height(@a) {
    min-height: unit(@a/2, px);
    min-height: unit(@a/@base, rem);
}

.max-width(@a) {
    max-width: unit(@a/2, px);
    max-width: unit(@a/@base, rem);
}

.min-width(@a) {
    min-width: unit(@a/2, px);
    min-width: unit(@a/@base, rem);
}

.line-height(@a) {
    line-height: unit(@a/2, px);
    line-height: unit(@a/@base, rem);
}

.padding(@a, @b, @c, @d) {
    padding: unit(@a/2, px) unit(@b/2, px) unit(@c/2, px) unit(@d/2, px);
    padding: unit(@a/@base, rem) unit(@b/@base, rem) unit(@c/@base, rem) unit(@d/@base, rem);
}

.padding(@a, @b) {
    padding: unit(@a/2, px) unit(@b/2, px);
    padding: unit(@a/@base, rem) unit(@b/@base, rem);
}

.padding(@a) {
    padding: unit(@a/2, px);
    padding: unit(@a/@base, rem);
}

.padding-left(@a) {
    padding-left: unit(@a/2, px);
    padding-left: unit(@a/@base, rem);
}

.padding-right(@a) {
    padding-right: unit(@a/2, px);
    padding-right: unit(@a/@base, rem);
}

.padding-top(@a) {
    padding-top: unit(@a/2, px);
    padding-top: unit(@a/@base, rem);
}

.padding-bottom(@a) {
    padding-bottom: unit(@a/2, px);
    padding-bottom: unit(@a/@base, rem);
}

.margin(@a, @b, @c, @d) {
    margin: unit(@a/2, px) unit(@b/2, px) unit(@c/2, px) unit(@d/2, px);
    margin: unit(@a/@base, rem) unit(@b/@base, rem) unit(@c/@base, rem) unit(@d/@base, rem);
}

.margin(@a, @b) {
    margin: unit(@a/2, px) unit(@b/2, px) unit(@a/2, px) unit(@b/2, px);
    margin: unit(@a/@base, rem) unit(@b/@base, rem) unit(@a/@base, rem) unit(@b/@base, rem);
}

.margin(@a) {
    margin: unit(@a/2, px);
    margin: unit(@a/@base, rem);
}

.margin-left(@a) {
    margin-left: unit(@a/2, px);
    margin-left: unit(@a/@base, rem);
}

.margin-right(@a) {
    margin-right: unit(@a/2, px);
    margin-right: unit(@a/@base, rem);
}

.margin-top(@a) {
    margin-top: unit(@a/2, px);
    margin-top: unit(@a/@base, rem);
}

.margin-bottom(@a) {
    margin-bottom: unit(@a/2, px);
    margin-bottom: unit(@a/@base, rem);
}

.border-width(@a) {
    border-width: unit(@a/2, px);
    border-width: unit(@a/@base, rem);
}

.border-width(@a, @b, @c, @d) {
    border-width: unit(@a/2, px) unit(@b/2, px) unit(@c/2, px) unit(@d/2, px);
    border-width: unit(@a/@base, rem) unit(@b/@base, rem) unit(@c/@base, rem) unit(@d/@base, rem);
}

.border-width(@a, @b) {
    border-width: unit(@a/2, px) unit(@b/2, px);
    border-width: unit(@a/@base, rem) unit(@b/@base, rem);
}

.border(@a, @b, @c) {
    border: unit(@a/2, px) @b @c;
    border: unit(@a/@base, rem) @b @c;
}

.border-top(@a, @b, @c) {
    border-top: unit(@a/2, px) @b @c;
    border-top: unit(@a/@base, rem) @b @c;
}

.border-bottom(@a, @b, @c) {
    border-bottom: unit(@a/2, px) @b @c;
    border-bottom: unit(@a/@base, rem) @b @c;
}

.border-left(@a, @b, @c) {
    border-left: unit(@a/2, px) @b @c;
    border-left: unit(@a/@base, rem) @b @c;
}

.border-right(@a, @b, @c) {
    border-right: unit(@a/2, px) @b @c;
    border-right: unit(@a/@base, rem) @b @c;
}

.font-size(@a) {
    font-size: unit(@a/2, px);
    font-size: unit(@a/@base, rem);
}

.background-size (@x) {
    background-size: unit(@x/2, px);
    background-size: unit(@x/@base, rem);
}

.background-size (@x, @y) {
    background-size: unit(@x/2, px) unit(@y/2, px);
    background-size: unit(@x/@base, rem) unit(@y/@base, rem);
}

.background-position (@x, @y) {
    background-position: unit(@x/2, px) unit(@y/2, px);
    background-position: unit(@x/@base, rem) unit(@y/@base, rem);
}

// 文本只显示一行，超出部分隐藏
.line-hide() {
    overflow: hidden;
    white-space: nowrap;
    text-overflow: ellipsis;
}

// 删除app中的click背景
.deleteOutline () {
    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
    -webkit-tap-highlight-color: transparent; /* For some Androids */
}

.ellipsis() {
    display: block;
    overflow: hidden;
    white-space: nowrap;
    text-overflow: ellipsis;
    width: 100%;
}

.border-radius(@a) {
    -webkit-border-radius: unit(@a/2, px);
    border-radius: unit(@a/2, px);
    -webkit-border-radius: unit(@a/@base, rem);
    border-radius: unit(@a/@base, rem);
}

.border-radius(@a, @b, @c, @d) {
    -webkit-border-radius: unit(@a/@base, rem) unit(@b/@base, rem) unit(@c/@base, rem) unit(@d/@base, rem);
    border-radius: unit(@a/@base, rem) unit(@b/@base, rem) unit(@c/@base, rem) unit(@d/@base, rem);
}


.vertical-align(@a) {
    vertical-align: unit(@a/2, px);
    vertical-align: unit(@a/@base, rem);
}

// 文本只显示一行，超出部分隐藏
.line-hide() {
    overflow: hidden;
    white-space: nowrap;
    text-overflow: ellipsis;
}

.word-spacing(@a){
    word-spacing: unit(@a/2, px);
    word-spacing: unit(@a/@base, rem);
}

.transition(@a){
    transition: @a;
    -webkit-transition: @a;
}

.translateX(@a) {
    -webkit-transform: translateX(unit(@a/2, px));
    -webkit-transform: translateX(unit(@a/base, rem));
    transform: translateX(unit(@a/2, px));
    transform: translateX(unit(@a/base, rem));
}

// img
.img(@width, @height) {
    .wrap-img {
        display: block;
        .width(@width);
        .height(@height);
        cursor: pointer;
        display: table-cell;
        text-align: center;
        vertical-align: middle;

        .img {
            .max-width(@width);
            .max-height(@height);
            vertical-align: middle;
        }
    }
}

// 三角形
.triangle(@a, @topColor, @rightColor, @bottomColor, @leftColor) {
    width: 0;
    height: 0;
    .border-width(@a);
    border-style: solid;
    border-color: @topColor @rightColor @bottomColor @leftColor;
}


.multiple-line-ellipsis(@line, @lh:36) {
    overflow: hidden;
    display: -webkit-box;
    -webkit-line-clamp: @line;
    -webkit-box-orient: vertical;
    .line-height(@lh);
    .min-height(@lh*2);
}

.text-indent(@a) {
    text-indent: unit(@a/@base, rem);
}

.animation-iteration-count(@a){
    animation-iteration-count: @a;
    -webkit-animation-iteration-count: @a;
}
.animation-fill-mode(@a){
    animation-fill-mode: @a;
    -webkit-animation-fill-mode: @a;
}
.animation-direction(@a){
    animation-direction: @a;
    -webkit-animation-direction: @a;
}
.animation-duration(@a){
    animation-duration: @a;
    -webkit-animation-duration: @a;
}



